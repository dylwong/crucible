---
# tasks file for generate_discovery_iso

- name: Set discovery iso body
  set_fact:
    request_body:
      ssh_public_key: "{{ ssh_public_key }}"
      image_type: "full-iso"

- name: static IP addresses
  include_tasks: static.yml
  when: hostvars[item].network_config is defined
  loop: "{{ groups['nodes'] | default([])}}"

- name: IP config
  set_fact:
    request_body: "{{ request_body | combine({'static_network_config': static_network_config_items}) }}"
  when: static_network_config_items | default([]) | length > 0

- name: Iso body
  debug:
    msg: "{{ request_body | to_json }}"
    verbosity: 1

- name: Generate a new discovery ISO
  crucible.ocm.rest_api_call:
    method: "POST"
    query: None
    url_endpoint: { 
                    #"host": "" for on-prem installation specify installer host dns
                    #"port": "" for on-prem install specify installer port 
                    "api_version": "v1" 
                    "api_endpoint": "clusters/{{ CLUSTER_ID }}/downloads/image"
                  }
    authentication: { 
                      ##include api_token if use cloud installer 
                      "username": "{{ HTTP_AUTH_USERNAME }}", 
                      "password": "{{ HTTP_AUTH_PASSWORD }}", 
                      "api_token": "{{ HTTP_API_TOKEN }}" 
                    }
    body: "{{ request_body }}"
  when: generate | bool == True
  register: http_reply

- debug: # noqa unnamed-task
    var: http_reply.json
    verbosity: 1
  when: generate | bool == True

- name: Put discovery iso in http store
  block:
    - name: Create discovery directory
      file:
        path: "{{ DOWNLOAD_DEST_PATH + '/' + DOWNLOAD_DEST_FILE | dirname }}"
        recurse: yes
        state: directory
      become: true

- name: get url
  crucible.ocm.get_url:
    url_endpoint: { "api_version": "v1" }    
    auth: { "username": "{{ HTTP_AUTH_USERNAME }}", 
                      "password": "{{ HTTP_AUTH_PASSWORD }}", 
                      "api_token": "{{ HTTP_API_TOKEN }}" }
    cluster_id: "{{ CLUSTER_ID }}"
    #dest: "{{ DOWNLOAD_DEST_PATH }}/{{ DOWNLOAD_DEST_FILE }}"
  when: download | bool == True
  register: response

  - debug: # noqa unnamed-task
      var: http_reply.status_code
      verbosity: 1
    when: download | bool == True

  - name: Upload discovery ISO
    crucible.ocm.rest_api_call:
      method: "PUT"
      query: None
      url_endpoint: { 
                      #"host": "" for on-prem installation specify installer host dns
                      #"port": "" for on-prem install specify installer port 
                      "api_version": "v1" 
                      "api_endpoint": "clusters/{{ CLUSTER_ID }}/downloads/image"
                    }
      authentication: { 
                        ##include api_token if use cloud installer 
                        "username": "{{ HTTP_AUTH_USERNAME }}", 
                        "password": "{{ HTTP_AUTH_PASSWORD }}", 
                        "api_token": "{{ HTTP_API_TOKEN }}" 
                      }
      upload: "{{ DOWNLOAD_DEST_PATH }}/{{ DOWNLOAD_DEST_FILE }}"
    when: upload | bool == True
    register: http_reply

  - debug: # noqa unnamed-task
      var: http_reply.status_code
      verbosity: 1
    when: upload | bool == True
delegate_to: http_store
