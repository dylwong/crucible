---
# tasks file for install_cluster
- name: Get discovery ignition file
  crucible.ocm.rest_api_call:
    url: "{{ URL_ASSISTED_INSTALLER_CLUSTER }}/discovery-ignition"
    method: "GET"
    query: None
    url_endpoint: { 
                    #"host": "" for on-prem installation specify installer host dns
                    #"port": "" for on-prem install specify installer port 
                    "api_version": "v1" 
                    "api_endpoint": "clusters/{{ CLUSTER_ID }}/discovery-ignition"
                  }
    authentication: { 
                      ##include api_token if use cloud installer 
                      "username": "{{ HTTP_AUTH_USERNAME }}", 
                      "password": "{{ HTTP_AUTH_PASSWORD }}", 
                      "api_token": "{{ HTTP_API_TOKEN }}" 
                    }
    body: {}
  register: discovery_ignition

- debug: # noqa unnamed-task
    var: discovery_ignition.json
    verbosity: 1

- name: "Make {{ fetched_dest }}"
  file:
    path: "{{ fetched_dest }}"
    state: directory
    recurse: yes
  delegate_to: localhost
  become: no

- name: "Copy discovery_ignition.json"
  copy:
    content: "{{ discovery_ignition.json }}"
    dest: "{{ fetched_dest }}/discovery-ignition.txt"
    mode: 0644
  delegate_to: localhost
  become: no

# TODO: Validate cluster settings

- name: Join list for workers and masters
  set_fact:
    nodes: "{{ groups['masters'] + groups['workers'] | default([]) }}"
    inventory_nodes: "{{ groups['masters'] + groups['workers'] | default([]) }}"

# Monitor hosts discovery
- name: Allow up to 20 minutes for all hosts to be discovered
  crucible.ocm.rest_api_call:
    url: "{{ URL_ASSISTED_INSTALLER_CLUSTER }}"
    method: "GET"
    query: "hosts"
    access_token: "{{ ACCESS_TOKEN }}"
    api_token: "{{ API_TOKEN }}"
  register: cluster
  until: ( cluster.json.hosts | length == inventory_nodes | length ) and ( cluster.json.status == "pending-for-input")
  retries: 20
  delay: 60
  when: install | bool == True

- name: Patch discovered hosts
  include_role:
    name: patch_host_config
  with_items:
    - "{{ cluster.json.hosts }}"
  loop_control:
    loop_var: discovered_host
  no_log: True

# Patch the cluster with the API Virtual IP
- name: Patch cluster with API Virtual IP
  crucible.ocm.rest_api_call:
    url: "{{ URL_ASSISTED_INSTALLER_CLUSTER }}"
    method: "PATCH"
    query: "hosts"
    access_token: "{{ ACCESS_TOKEN }}"
    api_token: "{{ API_TOKEN }}"
    body:
      {
        "vip_dhcp_allocation": "{{ VIP_DHCP_ALLOCATION | lower | bool }}",
        "ingress_vip": "{{ INGRESS_VIP }}",
        "api_vip": "{{ API_VIP }}",
      }
  when: install | bool == True
  register: http_reply

- debug: # noqa unnamed-task
    var: http_reply.json
    verbosity: 1

# Monitor cluster discovery
- name: Wait up to 20 minutes for the cluster to report as ready
  crucible.ocm.rest_api_call:
    url: "{{ URL_ASSISTED_INSTALLER_CLUSTER }}"
    method: "GET"
    query: "hosts"
    access_token: "{{ ACCESS_TOKEN }}"
    api_token: "{{ API_TOKEN }}"
    body: {}
  register: cluster
  until: "cluster.json.status == 'ready'"
  retries: 20
  delay: 60
  when: install | bool == True

# Install cluster
- name: Install cluster
  crucible.ocm.rest_api_call:
    url: "{{ URL_ASSISTED_INSTALLER_CLUSTER }}/actions/install"
    method: "POST"
    access_token: "{{ ACCESS_TOKEN }}"
    api_token: "{{ API_TOKEN }}"
    body: {}
  when: install | bool == True
  register: http_reply

- name: Debug http_reply
  debug:
    var: http_reply.json
    verbosity: 1
  when: install | bool == True
